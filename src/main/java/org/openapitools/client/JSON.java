/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.format.DateTimeFormatter;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private Gson gson;
    private boolean isLenientOnJson = false;
    private DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(org.openapitools.client.model.AnimatedGif.class, new TypeSelector<org.openapitools.client.model.AnimatedGif>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.AnimatedGif> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("animated_gif", org.openapitools.client.model.AnimatedGif.class);
                        classByDiscriminatorValue.put("photo", org.openapitools.client.model.Photo.class);
                        classByDiscriminatorValue.put("video", org.openapitools.client.model.Video.class);
                        classByDiscriminatorValue.put("AnimatedGif", org.openapitools.client.model.AnimatedGif.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ClientDisconnectedProblem.class, new TypeSelector<org.openapitools.client.model.ClientDisconnectedProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ClientDisconnectedProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ClientDisconnectedProblem", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ClientForbiddenProblem.class, new TypeSelector<org.openapitools.client.model.ClientForbiddenProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ClientForbiddenProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ClientForbiddenProblem", org.openapitools.client.model.ClientForbiddenProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ConflictProblem.class, new TypeSelector<org.openapitools.client.model.ConflictProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ConflictProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ConflictProblem", org.openapitools.client.model.ConflictProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ConnectionExceptionProblem.class, new TypeSelector<org.openapitools.client.model.ConnectionExceptionProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ConnectionExceptionProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ConnectionExceptionProblem", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DisallowedResourceProblem.class, new TypeSelector<org.openapitools.client.model.DisallowedResourceProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DisallowedResourceProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("DisallowedResourceProblem", org.openapitools.client.model.DisallowedResourceProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.DuplicateRuleProblem.class, new TypeSelector<org.openapitools.client.model.DuplicateRuleProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.DuplicateRuleProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("DuplicateRuleProblem", org.openapitools.client.model.DuplicateRuleProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.FieldUnauthorizedProblem.class, new TypeSelector<org.openapitools.client.model.FieldUnauthorizedProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.FieldUnauthorizedProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("FieldUnauthorizedProblem", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.GenericProblem.class, new TypeSelector<org.openapitools.client.model.GenericProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.GenericProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("GenericProblem", org.openapitools.client.model.GenericProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.InvalidRequestProblem.class, new TypeSelector<org.openapitools.client.model.InvalidRequestProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.InvalidRequestProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("InvalidRequestProblem", org.openapitools.client.model.InvalidRequestProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.InvalidRuleProblem.class, new TypeSelector<org.openapitools.client.model.InvalidRuleProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.InvalidRuleProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("InvalidRuleProblem", org.openapitools.client.model.InvalidRuleProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Media.class, new TypeSelector<org.openapitools.client.model.Media>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Media> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AnimatedGif", org.openapitools.client.model.AnimatedGif.class);
                        classByDiscriminatorValue.put("Photo", org.openapitools.client.model.Photo.class);
                        classByDiscriminatorValue.put("Video", org.openapitools.client.model.Video.class);
                        classByDiscriminatorValue.put("animated_gif", org.openapitools.client.model.AnimatedGif.class);
                        classByDiscriminatorValue.put("photo", org.openapitools.client.model.Photo.class);
                        classByDiscriminatorValue.put("video", org.openapitools.client.model.Video.class);
                        classByDiscriminatorValue.put("Media", org.openapitools.client.model.Media.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NonCompliantRulesProblem.class, new TypeSelector<org.openapitools.client.model.NonCompliantRulesProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NonCompliantRulesProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("NonCompliantRulesProblem", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.OperationalDisconnectProblem.class, new TypeSelector<org.openapitools.client.model.OperationalDisconnectProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.OperationalDisconnectProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("OperationalDisconnectProblem", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Photo.class, new TypeSelector<org.openapitools.client.model.Photo>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Photo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("animated_gif", org.openapitools.client.model.AnimatedGif.class);
                        classByDiscriminatorValue.put("photo", org.openapitools.client.model.Photo.class);
                        classByDiscriminatorValue.put("video", org.openapitools.client.model.Video.class);
                        classByDiscriminatorValue.put("Photo", org.openapitools.client.model.Photo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Problem.class, new TypeSelector<org.openapitools.client.model.Problem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Problem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ClientDisconnectedProblem", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("ClientForbiddenProblem", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("ConflictProblem", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("ConnectionExceptionProblem", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("DisallowedResourceProblem", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("DuplicateRuleProblem", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("FieldUnauthorizedProblem", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("GenericProblem", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("InvalidRequestProblem", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("InvalidRuleProblem", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("NonCompliantRulesProblem", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("OperationalDisconnectProblem", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("ResourceNotFoundProblem", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("ResourceUnauthorizedProblem", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("ResourceUnavailableProblem", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("RulesCapProblem", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("UnsupportedAuthenticationProblem", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("UsageCapExceededProblem", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("Problem", org.openapitools.client.model.Problem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ResourceNotFoundProblem.class, new TypeSelector<org.openapitools.client.model.ResourceNotFoundProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ResourceNotFoundProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ResourceNotFoundProblem", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ResourceUnauthorizedProblem.class, new TypeSelector<org.openapitools.client.model.ResourceUnauthorizedProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ResourceUnauthorizedProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ResourceUnauthorizedProblem", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ResourceUnavailableProblem.class, new TypeSelector<org.openapitools.client.model.ResourceUnavailableProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ResourceUnavailableProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("ResourceUnavailableProblem", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.RulesCapProblem.class, new TypeSelector<org.openapitools.client.model.RulesCapProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.RulesCapProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("RulesCapProblem", org.openapitools.client.model.RulesCapProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UnsupportedAuthenticationProblem.class, new TypeSelector<org.openapitools.client.model.UnsupportedAuthenticationProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UnsupportedAuthenticationProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("UnsupportedAuthenticationProblem", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.UsageCapExceededProblem.class, new TypeSelector<org.openapitools.client.model.UsageCapExceededProblem>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.UsageCapExceededProblem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("about:blank", org.openapitools.client.model.GenericProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-disconnected", org.openapitools.client.model.ClientDisconnectedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/client-forbidden", org.openapitools.client.model.ClientForbiddenProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/conflict", org.openapitools.client.model.ConflictProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/disallowed-resource", org.openapitools.client.model.DisallowedResourceProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/duplicate-rules", org.openapitools.client.model.DuplicateRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-request", org.openapitools.client.model.InvalidRequestProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/invalid-rules", org.openapitools.client.model.InvalidRuleProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/noncompliant-rules", org.openapitools.client.model.NonCompliantRulesProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-field", org.openapitools.client.model.FieldUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/not-authorized-for-resource", org.openapitools.client.model.ResourceUnauthorizedProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/operational-disconnect", org.openapitools.client.model.OperationalDisconnectProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-not-found", org.openapitools.client.model.ResourceNotFoundProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/resource-unavailable", org.openapitools.client.model.ResourceUnavailableProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/rule-cap", org.openapitools.client.model.RulesCapProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/streaming-connection", org.openapitools.client.model.ConnectionExceptionProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/unsupported-authentication", org.openapitools.client.model.UnsupportedAuthenticationProblem.class);
                        classByDiscriminatorValue.put("https://api.twitter.com/2/problems/usage-capped", org.openapitools.client.model.UsageCapExceededProblem.class);
                        classByDiscriminatorValue.put("UsageCapExceededProblem", org.openapitools.client.model.UsageCapExceededProblem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.Video.class, new TypeSelector<org.openapitools.client.model.Video>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.Video> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("animated_gif", org.openapitools.client.model.AnimatedGif.class);
                        classByDiscriminatorValue.put("photo", org.openapitools.client.model.Photo.class);
                        classByDiscriminatorValue.put("video", org.openapitools.client.model.Video.class);
                        classByDiscriminatorValue.put("Video", org.openapitools.client.model.Video.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    public JSON() {
        gson = createGson()
            .registerTypeAdapter(Date.class, dateTypeAdapter)
            .registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter)
            .registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter)
            .registerTypeAdapter(LocalDate.class, localDateTypeAdapter)
            .registerTypeAdapter(byte[].class, byteArrayAdapter)
            .registerTypeAdapterFactory(new org.openapitools.client.model.AddOrDeleteRulesRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.AddOrDeleteRulesResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.AddRulesRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.AddRulesResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.AnimatedGif.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.AnimatedGifAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CashtagEntity.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CashtagFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ClientDisconnectedProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ClientForbiddenProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ClientForbiddenProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ComplianceJob.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ConflictProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionExceptionProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionExceptionProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ContextAnnotation.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ContextAnnotationDomainFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ContextAnnotationEntityFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateBatchComplianceJobRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateTweetRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateTweetRequestGeo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateTweetRequestMedia.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateTweetRequestPoll.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.CreateTweetRequestReply.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DeleteRulesRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DeleteRulesRequestDelete.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DeleteRulesResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DisallowedResourceProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DisallowedResourceProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.DuplicateRuleProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.EntityIndicesInclusiveExclusive.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.EntityIndicesInclusiveInclusive.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Error.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Expansions.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FieldUnauthorizedProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FieldUnauthorizedProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FilteredStreamingTweet.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FilteredStreamingTweetOneOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FilteredStreamingTweetOneOfMatchingRules.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.FullTextEntities.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericMultipleUsersLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericMultipleUsersLookupResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericTweetsTimelineResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GenericTweetsTimelineResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Geo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.GetRulesResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.HashtagEntity.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.HashtagFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.HideReplyByIdRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.HideReplyByIdResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.HideReplyByIdResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.InvalidRequestProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.InvalidRequestProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.InvalidRequestProblemAllOfErrors.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.InvalidRuleProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListAddMemberRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListCreateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListDeleteResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListDeleteResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListFollowRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListFollowedResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListFollowedResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListLookupMultipleUsersLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListLookupMultipleUsersLookupResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListMemberResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListMemberResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListPinRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListPinnedResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListPinnedResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListUpdateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListUpdateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListUpdateResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ListsIdTweetsResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Media.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MentionEntity.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MentionFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiComplianceJobResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiListNoPaginationResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiListNoPaginationResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiListResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiListResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiSpaceLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiTweetLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.MultiUserLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.NonCompliantRulesProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.OperationalDisconnectProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.OperationalDisconnectProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Photo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.PhotoAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Place.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Point.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Poll.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.PollOption.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Problem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceNotFoundProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceNotFoundProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceUnauthorizedProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceUnauthorizedProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceUnavailableProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.ResourceUnavailableProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Rule.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RuleNoId.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RulesCapProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RulesRequestSummary.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RulesRequestSummaryOneOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RulesRequestSummaryOneOf1.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.RulesResponseMetadata.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SearchCount.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SingleComplianceJobResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SingleListLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SingleSpaceLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SingleTweetLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SingleUserLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Space.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.SpaceTopics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.StreamingTweet.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.StreamingTweetOneOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Tweet.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetAttachments.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetCountsResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetCountsResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetCreateResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetDeleteResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetDeleteResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetGeo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetNonPublicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetOrganicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetPromotedMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetPublicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetReferencedTweets.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetSearchResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetSearchResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.TweetWithheld.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.URLFields.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.URLImage.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UnsupportedAuthenticationProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UrlEntity.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsageCapExceededProblem.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsageCapExceededProblemAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.User.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UserEntities.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UserEntitiesUrl.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UserPublicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UserWithheld.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersBlockingMutationResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersBlockingMutationResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersFollowingCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersFollowingCreateResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersFollowingDeleteResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersFollowingLookupResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersIdBlockRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersIdFollowRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersIdLikedTweetsResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersIdLikedTweetsResponseMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersIdMuteRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersLikesCreateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersLikesCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersLikesCreateResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersLikesDeleteResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersMutingMutationResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersMutingMutationResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersRetweetsCreateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersRetweetsCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersRetweetsCreateResponseData.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.UsersRetweetsDeleteResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.Video.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.VideoAllOf.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.VideoAllOfNonPublicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.VideoAllOfOrganicMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.VideoAllOfPromotedMetrics.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new org.openapitools.client.model.VideoAllOfPublicMetrics.CustomTypeAdapterFactory())
            .create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public void setGson(Gson gson) {
        this.gson = gson;
    }

    public void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
