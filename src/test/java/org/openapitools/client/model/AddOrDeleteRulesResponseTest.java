/*
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.ApiClient;
import org.openapitools.client.model.AddRulesResponse;
import org.openapitools.client.model.DeleteRulesResponse;
import org.openapitools.client.model.Rule;
import org.openapitools.client.model.RulesResponseMetadata;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for AddOrDeleteRulesResponse
 */
public class AddOrDeleteRulesResponseTest {
    private final AddOrDeleteRulesResponse model = new AddOrDeleteRulesResponse();
    public ApiClient apiClient = new ApiClient();

    @Test
    public void testRulesRequestSummary() {
        String jsonString = "{\"created\":1,\"not_created\":0,\"valid\":1,\"invalid\":0}";

        // match and no exception
        RulesRequestSummaryOneOf theRulesRequestSummaryOneOf = apiClient.getJSON().getGson().fromJson(jsonString, RulesRequestSummaryOneOf.class);
        // no match results in exception
        Exception e2 = Assert.assertThrows(java.lang.IllegalArgumentException.class, () -> {
            RulesRequestSummaryOneOf1 theRulesRequestSummaryOneOf1 = apiClient.getJSON().getGson().fromJson(jsonString, RulesRequestSummaryOneOf1.class);
        });
        Assert.assertEquals(e2.getMessage(), "The field `created` in the JSON string is not defined in the `RulesRequestSummaryOneOf1` properties. JSON: {\"created\":1,\"not_created\":0,\"valid\":1,\"invalid\":0}");

        // only match RulesRequestSummaryOneOf
        RulesRequestSummary theAddRulesResponse = apiClient.getJSON().getGson().fromJson(jsonString, RulesRequestSummary.class);
        Assert.assertTrue(theAddRulesResponse.getActualInstance() instanceof RulesRequestSummaryOneOf);
    }

    /**
     * Model tests for AddOrDeleteRulesResponse
     */
    @Test
    public void testAddOrDeleteRulesResponse() {
        String jsonString = "{\"data\":[{\"value\":\"Blue\",\"id\":\"1468410959987314694\"}],\"meta\":{\"sent\":\"2021-12-08T02:43:49.329Z\",\"summary\":{\"created\":1,\"not_created\":0,\"valid\":1,\"invalid\":0}}}";
        // AddRulesResponse
        AddRulesResponse theAddRulesResponse = apiClient.getJSON().getGson().fromJson(jsonString, AddRulesResponse.class);

        // DeleteRulesResponse
        Exception e2 = Assert.assertThrows(java.lang.IllegalArgumentException.class, () -> {
            DeleteRulesResponse theDeleteRulesResponse = apiClient.getJSON().getGson().fromJson(jsonString, DeleteRulesResponse.class);
        });
        Assert.assertEquals(e2.getMessage(), "The field `data` in the JSON string is not defined in the `DeleteRulesResponse` properties. JSON: {\"data\":[{\"value\":\"Blue\",\"id\":\"1468410959987314694\"}],\"meta\":{\"sent\":\"2021-12-08T02:43:49.329Z\",\"summary\":{\"created\":1,\"not_created\":0,\"valid\":1,\"invalid\":0}}}");

        // successfully deserialization without exception
        AddOrDeleteRulesResponse r = apiClient.getJSON().getGson().fromJson(jsonString, AddOrDeleteRulesResponse.class);
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

}
